import subprocess
import webbrowser
from pathlib import Path
import sys
import os
import time

def run_command(command, cwd=None):
    try:
        # Use utf-8 encoding and handle errors with replace
        startupinfo = None
        if sys.platform == "win32":
            startupinfo = subprocess.STARTUPINFO()
            startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW

        result = subprocess.run(
            command,
            shell=True,
            capture_output=True,
            text=True,
            encoding='utf-8',
            errors='replace',
            cwd=cwd,
            startupinfo=startupinfo
        )
        
        if result.returncode == 0:
            return result.stdout.strip()
        else:
            return f"Error: {result.stderr.strip()}"
    except Exception as e:
        return f"Exception occurred: {str(e)}"

def open_browser(project_root, port=8000):
    """
    Universally serve and open a browser to index.html from the latest generated project.

    Args:
        project_root (str): Path to the root project folder generated by the agent (e.g. 'music_playlist_website')
        port (int): Port to serve on. Default is 8000.
    """
    try:
        abs_path = os.path.abspath(project_root)
        index_path = os.path.join(abs_path, "index.html")

        if not os.path.isfile(index_path):
            return f"❌ Could not find index.html in {abs_path}"

        os.chdir(abs_path)

        # Start HTTP server
        if sys.platform == "win32":
            subprocess.Popen(["python", "-m", "http.server", str(port)], shell=True)
        else:
            subprocess.Popen(["python3", "-m", "http.server", str(port)], shell=True)

        time.sleep(1)  # Allow time for server to start

        url = f"http://localhost:{port}/index.html"
        webbrowser.open(url)
        return f"✅ Serving and opening: {url}"

    except Exception as e:
        return f"❌ Failed to open browser: {str(e)}"
